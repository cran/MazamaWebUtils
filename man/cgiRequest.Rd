% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cgi.R
\name{cgiRequest}
\alias{cgiRequest}
\title{Create a CGI Request Object}
\usage{
cgiRequest(testParams = NULL)
}
\arguments{
\item{testParams}{URL request parameters for testing GET requests}
}
\value{
A list containing CGI request elements
}
\description{
A request object is created from the appropriate environment
variables and is returned as a list. List elements include:
\itemize{
\item{params -- list of request parameters}
\item{headers -- list of HTTP headers}
\item{method -- "GET"}
\item{raw -- NULL}
\item{content_type -- NULL}
\item{protocol -- "http"}
\item{body -- NULL}
}
}
\details{
Even in the modern era (>= 2017) it is still sometimes useful to
build simple web services using CGI scripts. Benefits include: ease of coding;
use of standard port 80; service uptime: even if the CGI script dies while
handling an earlier request, the script will be restarted for the next request.

Using this function, the body of an R CGI script can begin with:
\preformatted{
req <- cgiRequest()
headers <- req$params
params <- req$params
...
}
}
\note{
The returned object mimics the request object created in the \pkg{jug} package.
}
\examples{
# Example borrowed from webutils::parse_query
q <- "foo=1\%2B1\%3D2&bar=yin\%26yang"
req <- cgiRequest(q)
str(req$params)
}
\references{
\url{https://github.com/Bart6114/jug/blob/master/R/request.R}
}
